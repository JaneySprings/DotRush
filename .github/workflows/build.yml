name: Build and Release

on:
  push:
    tags:
      - '*'
    branches:
      - main
  pull_request:
    branches:
      - '*'

env:
  DOTNET_VERSION: '10.x'
  NODE_VERSION: '18'

jobs:
  #######################################################################
  # Multi-platform Build with Matrix
  #######################################################################
  build:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch-x64: linux-x64
            arch-arm64: linux-arm64
          - os: macos-latest
            platform: macos
            arch-x64: osx-x64
            arch-arm64: osx-arm64
          - os: windows-latest
            platform: windows
            arch-x64: win-x64
            arch-arm64: win-arm64
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore .NET tools
        run: dotnet tool restore

      - name: Install Node tools
        run: npm install -g vsce webpack webpack-cli

      - name: Build VSIX (${{ matrix.arch-x64 }})
        run: dotnet cake --target=vsix --configuration=release --arch=${{ matrix.arch-x64 }}

      - name: Build VSIX (${{ matrix.arch-arm64 }})
        run: dotnet cake --target=vsix --configuration=release --arch=${{ matrix.arch-arm64 }}

      - name: Build VSIX (bundle)
        run: dotnet cake --target=vsix --configuration=release --bundle

      - name: Upload ${{ matrix.platform }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: artifacts/
          retention-days: 7

  #######################################################################
  # Publish Release
  #######################################################################
  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          pattern: '*-build'
          merge-multiple: true

      - name: Install vsce
        run: npm install -g vsce

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/DotRush.Bundle.*
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref_name, 'pre') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to VS Code Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          shopt -s nullglob
          vsix_files=(artifacts/**/DotRush.v*.vsix)
          if [ ${#vsix_files[@]} -eq 0 ]; then
            echo "No VSIX files found to publish"
            exit 1
          fi
          
          for vsix_file in "${vsix_files[@]}"; do
            echo "Publishing $vsix_file"
            vsce publish --packagePath "$vsix_file" -p "$VSCE_PAT"
          done
